<?php

require_once('token.php');
require_once('bd.php');
require_once('typebot.php');

// Game
$GAME_CUBIC = 1; // –ò–≥—Ä–∞ "–ò–≥—Ä–∞–ª—å–Ω—ã–π –∫—É–±–∏–∫"
$GAME_BOWLING = 2; // –ò–≥—Ä–∞ "–ë–æ—É–ª–∏–Ω–≥"
$GAME_DARTS = 3; // –ò–≥—Ä–∞ "–î–∞—Ä—Ç—Å"
$GAME_FOOTBALL = 4; // –ò–≥—Ä–∞ "–§—É—Ç–±–æ–ª"
$GAME_BASKETBALL = 5; // –ò–≥—Ä–∞ "–ë–∞—Å–∫–µ—Ç–±–æ–ª"
$GAME_CASINO = 6; // –ò–≥—Ä–∞ "–ö–∞–∑–∏–Ω–æ"

// Role
$ADMIN = 1;
$MODER = 2;
$USER = 3;

// Action
$SEND_SMS_ROOM = 2; // –°–æ–∑–¥–∞–µ—Ç—Å—è –¥–∏–∞–ª–æ–≥ –∏ –ø–∏—à–µ–º –¥—Ä—É–≥ –¥—Ä—É–≥—É
$FORM_REQUISITES = 3; // –ü–∏—à–µ—Ç —Å–≤–æ–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª–∫–∏
$CREATE_USER_OBMEN = 4; // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–µ—Ç –æ–±–º–µ–Ω (–°–æ–≤–µ—Ä—à–∏—Ç—å –æ–±–º–µ–Ω)

$banUserTime = time() + 60 * 5; // –ë–∞–Ω –Ω–∞ 5 –º–∏–Ω—É—Ç;
$banTimeString = '5 –º–∏–Ω—É—Ç'; // –¢–µ–∫—Å—Ç –¥–ª—è –±–∞–Ω–∞
$countProdGame = 1; // –í—Ä–µ–º—è, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ

# –ü—Ä–∏–Ω–∏–º–∞–µ–º –∑–∞–ø—Ä–æ—Å
$data = json_decode(file_get_contents('php://input'), TRUE);
//file_put_contents('file.txt', '$data: '.print_r($data, 1)."\n", FILE_APPEND); // –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á—Ç–æ –ø—Ä–∏—à–ª–æ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞


//https://api.telegram.org/bot*–¢–æ–∫–µ–Ω –±–æ—Ç–∞*/setwebhook?url=*—Å—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç–∞*


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä—É—á–Ω–æ–π –≤–≤–æ–¥ –∏–ª–∏ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É
$data = $data['callback_query'] ? $data['callback_query'] : $data['message'];

$referal = $data['text'];

//$maskText = '[^A-Za-z–ê-–Ø–∞-—è0-9 !@#$%^&*()‚Ññ;%]';

# –í–∞–∂–Ω—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
define('TOKEN', $token);

# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
$message = $data['text'] ? $data['text'] : $data['data'];


$botToken = $token;
$botAPI = "https://api.telegram.org/bot" . $botToken;
$update = json_decode(file_get_contents('php://input'), TRUE);

$message_id = $data['message_id'];

// –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
$user_id = $data['from']['id'];
$first_name = $data['from']['first_name'];
// first_name - –±–µ–∑ —Å–º–∞–π–ª–∏–∫–æ–≤
$username = $data['from']['username'];
$emoji = $data['dice']['emoji'];
$emoji_result = $data['dice']['value'];
$date_send_msg = $data['date'];

//–î–∞–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã
$group_id = $data['chat']['id'];
$group_title = $data['chat']['title'];
$group_type = $data['chat']['type'];

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –≥—Ä—É–ø–ø
$group_new_id = $update['my_chat_member']['chat']['id'];
$group_new_title = $update['my_chat_member']['chat']['title'];
$group_new_type = $update['my_chat_member']['chat']['type'];
$group_new_status = $update['my_chat_member']['new_chat_member']['status'];

$typeMessage = $data['forward_from'];

// –ï—Å–ª–∏ –ø–∏—à–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞–º–æ–≥–æ –±–æ—Ç–∞, —Ç–æ –≤—ã–¥–∞–µ—Ç—Å—è id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –≤ –≥—Ä—É–ø–ø–µ, —Ç–æ id –≥—Ä—É–ø–ø—ã
$all_chat_id = $data['chat']['id'];

$dbh =  new PDO('mysql:host='.$host.';charset=utf8;dbname='.$dbName, $bdUser, $bdPassword);
$dbh->query('SET NAMES utf8mb4');

if(isset($group_new_id)){
    if($group_new_type == 'group' || $group_new_type == 'supergroup'){
        if($group_new_status == 'member'){

            $data = http_build_query([
                'chat_id' => $group_new_id,
                'video' => 'https://game.cryptopushbot.ru/1.mp4',
                'caption' => '–ü—Ä–∏–≤–µ—Ç\\, —è –∏–≥—Ä–æ–≤–æ–π –±–æ—Ç –¥–ª—è —á–∞—Ç–æ–≤\\! üëã

–í –∏–≥—Ä–µ –µ—Å—Ç—å 6 –æ—Å–Ω–æ–≤–Ω—ã—Ö emoji\\: 

üéØ \\- –ü–æ–ø–∞–¥–∞–π –≤ –º–∏—à–µ–Ω—å
üé≥ \\- –í—ã–±–∏–≤–∞–π —Å—Ç—Ä–∞–π–∫–∏
‚öΩÔ∏è \\- –ó–∞–±–∏–≤–∞–π –≥–æ–ª—ã
üé∞ \\- –í—ã–±–∏–≤–∞–π –î–∂–µ–∫–ü–æ—Ç—ã
üèÄ \\- –ü–æ–ø–∞–¥–∞–π –≤ –∫–æ—Ä–∑–∏–Ω—É
üé≤ \\- –í—ã–±–∏–≤–∞–π max —á–∏—Å–ª–æ –≤ –∫—É–±–∏–∫

Telegram –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç —á–µ—Å—Ç–Ω—É—é –∏–≥—Ä—É –∑–∞ —Å—á—ë—Ç —Ä–∞–Ω–¥–æ–º–∞, –∞ [¬´–ò–≥—Ä–æ–≤–æ–π –±–æ—Ç¬ª](https://t.me/stickersgame_bot) –±—É–¥–µ—Ç —É—á–∏—Ç—ã–≤–∞—Ç—å –ø–æ–±–µ–¥—ã –∏ —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å —Ç–æ–ø —Å—Ä–µ–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ —á–∞—Ç–æ–≤\\.

–°–¢–ê–ù–¨ –¢–û–ü 1 –ò–ì–†–û–ö–û–ú –ò–õ–ò –ü–û–ë–ï–ñ–î–ê–ô –ö–û–ú–ê–ù–î–û–ô\\!ü•á'
            ]);

            $inline_button1 = array("text"=>"‚öΩ","callback_data" => 'football_'.$user_id);
            $inline_button2 = array("text"=>"üé≥","callback_data" => 'bowling_'.$user_id);
            $inline_button3 = array("text"=>"üéØ","callback_data" => 'darts_'.$user_id);
            $inline_button4 = array("text"=>"üèÄ","callback_data" => 'basketball_'.$user_id);
            $inline_button5 = array("text"=>"üé≤","callback_data" => 'cubic_'.$user_id);
            $inline_button6 = array("text"=>"üé∞","callback_data" => 'casino_'.$user_id);
            $inline_keyboard = [[$inline_button1, $inline_button2, $inline_button3, $inline_button4, $inline_button5, $inline_button6]];
            $keyboard=array('inline_keyboard'=>$inline_keyboard);
            $replyMarkup = json_encode($keyboard);
            file_get_contents($botAPI . "/sendVideo?{$data}&reply_markup=".$replyMarkup."&parse_mode=MarkdownV2");

            $checkUser = $dbh->query('SELECT * FROM users WHERE role_id = '.$ADMIN)->fetchAll();
            foreach ($checkUser as $item){
                $data = http_build_query([
                    'text' => '–í '.$group_new_type.' - "'.$group_new_title.'" –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –±–æ—Ç!',
                    'chat_id' => $item['userid']
                ]);
                file_get_contents($botAPI . "/sendMessage?{$data}");
            }

            $checkGroup = $dbh->query('SELECT * FROM group_users WHERE groupid = \''.$group_new_id.'\'')->fetchAll();
            if (is_array($checkGroup) && count($checkGroup) > 0) {
                $dbh->query('UPDATE group_users SET status = 1 WHERE groupid = \''.$group_new_id.'\'');
            } else {
                // –î–æ–±–∞–≤–ª—è—é —á–∞—Ç –∏–ª–∏ –≥—Ä—É–ø–ø—É –≤ –±–∞–∑—É, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç–∞–º –Ω–∏–∫—Ç–æ –Ω–µ –∏–≥—Ä–∞–ª
                $dbh->query('INSERT INTO group_users (groupid, title, type, status, date) VALUE ("' . $group_new_id . '", "' . $group_new_title . '", "' . $group_new_type . '", 1, NOW())');
            }
        }
        if($group_new_status == 'left'){
            $dbh->query('UPDATE group_users SET status = 0 WHERE groupid = \''.$group_new_id.'\'');
            $checkUser = $dbh->query('SELECT * FROM users WHERE role_id = '.$ADMIN)->fetchAll();
            foreach ($checkUser as $item){
                $data = http_build_query([
                    'text' => '–ò–∑ '.$group_new_type.' - "'.$group_new_title.'" —É–¥–∞–ª–µ–Ω –±–æ—Ç!',
                    'chat_id' => $item['userid']
                ]);
                file_get_contents($botAPI . "/sendMessage?{$data}");
            }
        }
    }
}

if (isset($emoji)) {
    if($group_type == 'group' || $group_type == 'supergroup'){
        if($emoji == 'üé≤' OR $emoji == '‚öΩ' OR $emoji == 'üéØ' OR $emoji == 'üé≥' OR $emoji == 'üèÄ' OR $emoji == 'üé∞'){
            if(isset($typeMessage)){

            } else {
                $checkBanUser = $dbh->query('SELECT * FROM user_ban WHERE groupid = \''.$group_id.'\' AND userid = \''.$user_id.'\'')->fetchAll();
                if(is_array($checkBanUser) && count($checkBanUser) > 0) {
                    $getDatetimeUserBan = 0;
                    foreach ($checkBanUser as $row){
                        $getDatetimeUserBan = $row['date_time_tm'];
                    }
                    $currentTime = time();
                    if($currentTime > $getDatetimeUserBan){
                        $dbh->query('DELETE FROM user_ban WHERE groupid = \''.$group_id.'\' AND userid = \''.$user_id.'\'');
//                    $dbh->query('INSERT INTO user_ban_count (user_id, groupid, count) VALUE ("'.$user_id.'", "'.$group_id.'", 0)');
                        $dbh->query('UPDATE user_ban_count SET count = 0 WHERE groupid = \''.$group_id.'\' AND user_id = \''.$user_id.'\''); // –í—Ä–æ–¥–µ –µ—Å—Ç—å –∑–∞–ø–∏—Å—å –∏ –Ω—É–∂–Ω–æ –ª–∏—à—å –æ–±–Ω–æ–≤–∏—Ç—å (–≤—ã—à–µ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏–ª)
                        $data = http_build_query([
                            'text' => '–í—ã —Ä–∞–∑–±–∞–Ω–µ–Ω—ã –≤ –¥–∞–Ω–Ω–æ–º —á–∞—Ç–µ. –ú–æ–∂–µ—Ç–µ –¥–∞–ª—å—à–µ –∏–≥—Ä–∞—Ç—å!',
                            'chat_id' => $group_id,
                            'reply_to_message_id' => $message_id
                        ]);
                        file_get_contents($botAPI . "/sendMessage?{$data}");
                    } else {
                        $remainder = $getDatetimeUserBan - $currentTime;
                        $messageTime = round($remainder / 60, 0);
                        $data = http_build_query([
                            'text' => 'üîá –í—ã –ø–æ–ª—É—á–∏–ª–∏ (3/3) –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∑–∞ —Å–ø–∞–º. –ë–æ—Ç –æ–≥—Ä–∞–Ω–∏—á–∏–ª –≤–∞—Å –≤ –∏–≥—Ä–µ –∏ –Ω–µ –±—É–¥–µ—Ç —É—á–∏—Ç—ã–≤–∞—Ç—å –≤–∞—à–∏ –ø–æ–±–µ–¥—ã –≤ —Ç–µ—á–µ–Ω–∏–µ '.$messageTime.' –º–∏–Ω.',
                            'chat_id' => $group_id,
                            'reply_to_message_id' => $message_id
                        ]);
                        file_get_contents($botAPI . "/sendMessage?{$data}");
                    }
                } else {
                    $date = date("Y-m-d H:i:s");
                    $checkUser = $dbh->query('SELECT * FROM users WHERE userid = "'.$user_id.'"')->fetchAll();
                    if(is_array($checkUser) && count($checkUser) > 0) {
                        //–ü—Ä–æ–≤–µ—Ä—è—é –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞—é first_name. –ï—Å–ª–∏ —Ä–∞–∑–ª–∏—á–∞–µ—Ç—Å—è, –æ–±–Ω–æ–≤–ª—è—é
                        $getBdFirstName = '';
                        foreach ($checkUser as $item){
                            $getBdFirstName = $item['first_name'];
                        }
                        if (strcmp($getBdFirstName, $first_name) !== 0) {
                            $dbh->query('UPDATE users SET first_name = \''.$first_name.'\' WHERE userid = \''.$user_id.'\'');
                        }
                    } else {
                        $dbh->query('INSERT INTO users (userid, first_name, username, role_id, date) VALUE ("' . $user_id . '", "' . $first_name . '", "' . $username . '", '.$USER.', "' . $date . '")');
                    }
                    $checkGroup = $dbh->query('SELECT * FROM group_users WHERE groupid = \''.$group_id.'\'')->fetchAll();
                    if (is_array($checkGroup) && count($checkGroup) > 0) {
                        //–ü—Ä–æ–≤–µ—Ä—è—é –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞—é title. –ï—Å–ª–∏ —Ä–∞–∑–ª–∏—á–∞–µ—Ç—Å—è, –æ–±–Ω–æ–≤–ª—è—é
                        $getBdGroupTitle = '';
                        foreach ($checkGroup as $item){
                            $getBdGroupTitle = $item['title'];
                        }
                        if (strcmp($getBdGroupTitle, $group_title) !== 0) {
                            $dbh->query('UPDATE group_users SET title = \''.$group_title.'\' WHERE groupid = \''.$group_id.'\'');
                        }
                    } else {
                        $dbh->query('INSERT INTO group_users (groupid, title, type, date) VALUE ("' . $group_id . '", "' . $group_title . '", "' . $group_type . '", NOW())');
                    }

                    $checkMessageLastUser = $dbh->query('SELECT * FROM chat_users_group WHERE userid = "'.$user_id.'" AND groupid = "'.$group_id.'" AND id = (SELECT MAX(id) FROM chat_users_group WHERE userid = "'.$user_id.'" AND groupid = "'.$group_id.'")')->fetchAll();
                    if(is_array($checkMessageLastUser) && count($checkMessageLastUser) > 0) {
                        $checkTime = $dbh->query('SELECT * FROM last_message_group WHERE groupid = \''.$group_id.'\' AND userid = \''.$user_id.'\' AND id = (SELECT MAX(id) FROM last_message_group WHERE groupid = \''.$group_id.'\' AND userid = \''.$user_id.'\')')->fetchAll();
                        if(is_array($checkTime) && count($checkTime) > 0) {
                            $checkDateTime = 0;
                            foreach ($checkTime as $row) {
                                $checkDateTime = $row['date_time_tm'] + $countProdGame;
                            }
                            if ($checkDateTime > time()) {
                                $countBan = 0;
                                $getCountBan = $dbh->query('SELECT count as count_ban FROM user_ban_count WHERE groupid = \''.$group_id.'\' AND user_id = \''.$user_id.'\'')->fetchAll();
                                if(is_array($getCountBan) && count($getCountBan) > 0) {
                                    foreach ($getCountBan as $row){
                                        $countBan = $row['count_ban'] + 1;
                                    }
                                } else {
                                    $countBan = 1;
                                    $dbh->query('INSERT INTO user_ban_count (user_id, groupid, count) VALUE ("'.$user_id.'", "'.$group_id.'", '.$countBan.')');
                                }
                                if($countBan > 2){
                                    $dbh->query('INSERT INTO user_ban (userid, groupid, date_time_tm, date)  VALUE ("'.$user_id.'", "'.$group_id.'", '.$banUserTime.', NOW())');
                                    $dbh->query('UPDATE user_ban_count SET count = '.$countBan.' WHERE groupid = \''.$group_id.'\' AND user_id = \''.$user_id.'\'');
                                    $data = http_build_query([
                                        'text' => 'üîá –í—ã –ø–æ–ª—É—á–∏–ª–∏ ('.$countBan.'/3) –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∑–∞ —Å–ø–∞–º. –ë–æ—Ç –æ–≥—Ä–∞–Ω–∏—á–∏–ª –≤–∞—Å –≤ –∏–≥—Ä–µ –∏ –Ω–µ –±—É–¥–µ—Ç —É—á–∏—Ç—ã–≤–∞—Ç—å –≤–∞—à–∏ –ø–æ–±–µ–¥—ã –≤ —Ç–µ—á–µ–Ω–∏–µ '.$banTimeString,
                                        'chat_id' => $group_id,
                                        'reply_to_message_id' => $message_id
                                    ]);
                                    file_get_contents($botAPI . "/sendMessage?{$data}");
                                } else {
                                    $dbh->query('UPDATE user_ban_count SET count = '.$countBan.' WHERE groupid = \''.$group_id.'\' AND user_id = \''.$user_id.'\'');
                                    $data = http_build_query([
                                        'text' => 'üö´ –°–ø–∞–º –≤ –∏–≥—Ä–µ –∑–∞–ø—Ä–µ—â–µ–Ω, —Ç–∞–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è. (–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ '.$countBan.'/3 –Ω–∞ 24 —á–∞—Å–∞)

‚ùóÔ∏è –ï—Å–ª–∏ –≤—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ —Å–ø–∞–º, –±–æ—Ç –æ–≥—Ä–∞–Ω–∏—á–∏—Ç –≤–∞—Å –≤ –∏–≥—Ä–µ –∏ –Ω–µ –±—É–¥–µ—Ç —É—á–∏—Ç—ã–≤–∞—Ç—å –≤–∞—à–∏ –ø–æ–±–µ–¥—ã.'.PHP_EOL.''.PHP_EOL.'üéÆ 1 —Ö–æ–¥ –≤ 1 —Å–µ–∫—É–Ω–¥—É - –¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –∏–≥—Ä—ã!',
                                        'chat_id' => $group_id,
                                        'reply_to_message_id' => $message_id
                                    ]);
                                    file_get_contents($botAPI . "/sendMessage?{$data}");
                                }

                                exit;
                            } else {
                                $dbh->query('INSERT INTO last_message_group (userid, groupid, date_time_tm) VALUE ("'.$user_id.'", "'.$group_id.'", '.$date_send_msg.')');
                            }
                        }

                    } else {
                        $dbh->query('INSERT INTO chat_users_group (userid, groupid, type_game_id, date_time_tm, message_id, date) VALUE ("'.$user_id.'", "'.$group_id.'", 0, '.$date_send_msg.', 0, "'.$date.'")');
                        $dbh->query('INSERT INTO last_message_group (userid, groupid, date_time_tm) VALUE ("'.$user_id.'", "'.$group_id.'", '.$date_send_msg.')');
                        $dbh->query('INSERT INTO user_ban_count (user_id, groupid, count) VALUE ("'.$user_id.'", "'.$group_id.'", 0)');
                    }
                    // –ö—É–±–∏–∫
                    if($emoji == 'üé≤') {
                        if ($emoji_result == 6) {
                            gameStart($emoji, $user_id, $group_id, $GAME_CUBIC , $date_send_msg, $dbh, $botAPI, $message_id);
                        }
                    }

                    // –§—É—Ç–±–æ–ª
                    if($emoji == '‚öΩ') {
                        if ($emoji_result > 2) {
                            gameStart($emoji, $user_id, $group_id, $GAME_FOOTBALL, $date_send_msg, $dbh, $botAPI, $message_id);
                        }
                    }
                    // –î–∞—Ä—Ç—Å
                    if($emoji == 'üéØ') {
                        if ($emoji_result == 6) {
                            gameStart($emoji, $user_id, $group_id, $GAME_DARTS, $date_send_msg, $dbh, $botAPI, $message_id);
                        }
                    }
                    // –ë–æ—É–ª–∏–Ω–≥
                    if($emoji == 'üé≥') {
                        if ($emoji_result == 6) {
                            gameStart($emoji, $user_id, $group_id, $GAME_BOWLING, $date_send_msg, $dbh, $botAPI, $message_id);
                        }
                    }
                    // –ë–∞—Å–∫–µ—Ç–±–æ–ª
                    if($emoji == 'üèÄ') {
                        if ($emoji_result > 3) {
                            gameStart($emoji, $user_id, $group_id, $GAME_BASKETBALL, $date_send_msg, $dbh, $botAPI, $message_id);
                        }
                    }
                    // –ö–∞–∑–∏–Ω–æ
                    if($emoji == 'üé∞') {
                        /*
                         * 64 - 777 (–¥–∂–µ–∫–ø–æ—Ç)
                         * 43 - –ª–∏–º–æ–Ω—ã (–¥–∂–µ–∫–ø–æ—Ç)
                         * 22 - –≤–∏—à–Ω—è (–¥–∂–µ–∫–ø–æ—Ç)
                         * 1 - bar (–¥–∂–µ–∫–ø–æ—Ç)
                         * OR $emoji_result == 16 - ???
                         * */
                        if ($emoji_result == 22 or $emoji_result == 43 or $emoji_result == 1 or $emoji_result == 64) {
                            gameStart($emoji, $user_id, $group_id, $GAME_CASINO, $date_send_msg, $dbh, $botAPI, $message_id);
                        }
                    }
                }
            }
        }
    }
}

function gameStart($emoji, $user_id, $group_id, $game, $date_send_msg, $dbh, $botAPI, $message_id){
    $monday = new \DateTime('Monday this week');
    $mondayFormat =  $monday->format('Y-m-d');
    $currentDate = date('Y-m-d');
    $mondayFormat = $mondayFormat.' 00:00:00';
    $currentDate = $currentDate.' 23:59:00';

    $dbh->query('INSERT INTO chat_users_group (userid, groupid, type_game_id, date_time_tm, message_id, date) VALUE ("'.$user_id.'", "'.$group_id.'", '.$game.', '.$date_send_msg.', '.$message_id.', NOW())');
    $last_id = $dbh->lastInsertId();
    $getCountSucessUser = $dbh->query('SELECT COUNT(type_game_id) as count_game, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE chat.date BETWEEN "'.$mondayFormat.'" AND "'.$currentDate.'" AND type_game_id = '.$game.' AND chat.userid = \''.$user_id.'\' AND chat.groupid = \''.$group_id.'\' GROUP BY users.first_name')->fetchAll();

    $message_id_user = 0;
    $getMessageId = $dbh->query('SELECT message_id FROM chat_users_group as chat WHERE chat.id = '.$last_id)->fetchAll();
    foreach ($getMessageId as $item){
        $message_id_user = $item['message_id'];
    }

    if(is_array($getCountSucessUser) && count($getCountSucessUser) > 0) {
        $textSendArray = array(
            1 => '—Ç–µ–±–µ –≤—ã–ø–∞–ª –º–∞–∫—Å. —á–∏—Å–ª–æ –≤ –∫—É–±–∏–∫ –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ: ',
            4 => '—Ç—ã –∑–∞–±–∏–ª –≥–æ–ª –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ: ',
            3 => '—Ç—ã –ø–æ–ø–∞–ª –≤ –º–∏—à–µ–Ω—å –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ: ',
            2 => '—Ç—ã –≤—ã–±–∏–ª —Å—Ç—Ä–∞–π–∫ –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ: ',
            5 => '—Ç—ã –ø–æ–ø–∞–ª –≤ –∫–æ—Ä–∑–∏–Ω—É –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ: ',
            6 => '—É —Ç–µ–±—è –≤—ã–ø–∞–ª –¥–∂–µ–∫–ø–æ—Ç –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ: '
        );
        foreach ($getCountSucessUser as $val) {
            foreach ($textSendArray as $key => $value){
                if($game == $key){
                    $message = "$emoji ".$val['first_name'].", ".$value."".$val['count_game']." —Ä–∞–∑".PHP_EOL;
                }
            }
        }
        $message .= PHP_EOL;
        $textLeader = array(
            1 => '–ª–∏–¥–µ—Ä –Ω–µ–¥–µ–ª–∏ –ø–æ –ø–æ–±–µ–¥–∞–º –≤ –∫—É–±–∏–∫: ',
            4 => '–ª–∏–¥–µ—Ä –Ω–µ–¥–µ–ª–∏ –ø–æ –∑–∞–±–∏—Ç—ã–º –≥–æ–ª–∞–º: ',
            3 => '–ª–∏–¥–µ—Ä –Ω–µ–¥–µ–ª–∏ –ø–æ –ø–æ–ø–∞–¥–∞–Ω–∏—è–º –≤ –º–∏—à–µ–Ω—å: ',
            2 => '–ª–∏–¥–µ—Ä –Ω–µ–¥–µ–ª–∏ –ø–æ –≤—ã–±–∏—Ç—ã–º —Å—Ç—Ä–∞–π–∫–∞–º: ',
            5 => '–ª–∏–¥–µ—Ä –Ω–µ–¥–µ–ª–∏ –ø–æ –ø–æ–ø–∞–¥–∞–Ω–∏—è–º –≤ –∫–æ—Ä–∑–∏–Ω—É: ',
            6 => '–ª–∏–¥–µ—Ä –Ω–µ–¥–µ–ª–∏ –ø–æ –¥–∂–µ–∫–ø–æ—Ç–∞–º: '
        );

        $getSuperGamer = $dbh->query('SELECT COUNT(type_game_id) as count_game, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE chat.date BETWEEN "'.$mondayFormat.'" AND "'.$currentDate.'" AND type_game_id = '.$game.' AND chat.groupid = "'.$group_id.'" GROUP BY users.first_name ORDER BY count_game DESC LIMIT 1')->fetchAll();
        foreach ($getSuperGamer as $item) {
            foreach ($textLeader as $key => $value){
                if($game == $key){
                    $message .= "üèÜ ".$item['first_name'].", ".$value."".$item['count_game']." —Ä–∞–∑";
                }
            }
        }

//        if($game == 1){
//            $message .= PHP_EOL;
//            $data = http_build_query([
//                'text' => $message,
//                'chat_id' => $group_id,
//                'reply_to_message_id' => $message_id_user
//            ]);
//            file_get_contents($botAPI . "/sendMessage?{$data}");
//        } else {
            $message .= PHP_EOL;
            $message .= PHP_EOL;
            $message .= PHP_EOL;


            $data = http_build_query([
                'text' => $message,
                'chat_id' => $group_id,
                'reply_to_message_id' => $message_id_user
            ]);
            $inline_button1 = array("text"=>"‚öΩ","callback_data" => 'football_'.$user_id);
            $inline_button2 = array("text"=>"üé≥","callback_data" => 'bowling_'.$user_id);
            $inline_button3 = array("text"=>"üéØ","callback_data" => 'darts_'.$user_id);
            $inline_button4 = array("text"=>"üèÄ","callback_data" => 'basketball_'.$user_id);
            $inline_button5 = array("text"=>"üé≤","callback_data" => 'cubic_'.$user_id);
            $inline_button6 = array("text"=>"üé∞","callback_data" => 'casino_'.$user_id);
            $inline_keyboard = [[wordAd()], [$inline_button1, $inline_button2, $inline_button3, $inline_button4, $inline_button5, $inline_button6]];
            $keyboard=array("inline_keyboard"=>$inline_keyboard);
            $replyMarkup = json_encode($keyboard);
            $data = quotemeta($data);
            file_get_contents($botAPI . "/sendMessage?{$data}&reply_markup=".$replyMarkup."&parse_mode=MarkdownV2&disable_web_page_preview=true");
            //file_put_contents('file.txt', '$data: '.print_r($botAPI . "/sendMessage?{$data}&reply_markup=".$replyMarkup."&parse_mode=MarkdownV2&disable_web_page_preview=true", 1)."\n", FILE_APPEND);
//            $a = file_get_contents($botAPI . "/sendMessage?{$data}&reply_markup=".$replyMarkup."&parse_mode=MarkdownV2&disable_web_page_preview=true");
//            $data = http_build_query([
//                'text' => $a,
//                'chat_id' => $group_id,
//            ]);
//            file_get_contents($botAPI . "/sendMessage?{$data}");
//            $d = $botAPI . "/sendMessage?{$data}&reply_markup=".$replyMarkup."&parse_mode=MarkdownV2&disable_web_page_preview=true";
//            $data = http_build_query([
//                'text' => $d,
//                'chat_id' => $group_id,
//            ]);
//            file_get_contents($botAPI . "/sendMessage?{$data}");
//        }
    }
}


function wordAd(){
    $bot = include('typebotarr.php');

    $inline_button[] = array("text"=>"–î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É ","url"=> $bot["addBotChat"]);
    $inline_button[] = array("text"=>"–ö–£–ü–ò–¢–¨ –†–ï–ö–õ–ê–ú–ù–û–ï –ú–ï–°–¢–û üöÄ","url"=> 'https://t.me/managerbotstg');
    $inline_button[] = array("text"=>"üëâ –ö–õ–ò–ö üëÄ","url"=> 'https://t.me/newsclik');
    $inline_button[] = array("text"=>"–°–ª—É—á–∞–π–Ω—ã–π –°—Ç–∏–∫–µ—Ä üòã –ë–æ—Ç","url"=> 'https://t.me/random_stikers_bot');
    $inline_button[] = array("text"=>"–î–û–ë–ê–í–ò–¢–¨ –ë–û–¢ –í –°–í–û–ô –ß–ê–¢","url"=> 'https://t.me/stickersgame_bot?startgroup=Lichka');
    $inline_button[] = array("text"=>"üëâ –ò–≥—Ä—ã –≤ –¢–µ–ª–µ–≥—Ä–∞–º üéÆ –ë–æ—Ç","url"=> 'https://t.me/igry_v_telegram_bot');
    $inline_button[] = array("text"=>"–ü–æ–ª—É—á–∏—Ç—å –¥–æ 20 000 —Ä. –ø–æ–¥ 0%","url"=> 'https://t.me/podbor_zaimov_bot');
    $inline_button[] = array("text"=>"–ß—Ç–æ –ø–æ–¥–∞—Ä–∏—Ç—å? üéÅ –ë–æ—Ç","url"=> 'https://t.me/chtomnepodarit_bot');
    $inline_button[] = array("text"=>"–ß–∞—Ç –û–±–º–µ–Ω–∞ –°—Ç–∏–∫–µ—Ä–∞–º–∏ üî•","url"=> 'https://t.me/stikerychat');
    $inline_button[] = array("text"=>"üëâ –ï–©–ï –ë–û–¢–´ üëæ","url"=> 'https://t.me/top_bots_telegram');
    $inline_button[] = array("text"=>"üëâ –î–ê –∏–ª–∏ –ù–ï–¢? ‚öñÔ∏è –ë–æ—Ç","url"=> 'https://t.me/otvet_da_ili_net_bot');

    $rand_keys = array_rand($inline_button, 1);

    return $inline_button[$rand_keys];
}

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
switch ($message) {
    case '/start':

        start($botAPI, $user_id, $urlBots);

        break;

    case '/play':

        // Deleting message
        $data_del = http_build_query([
            'chat_id' => $all_chat_id,
            'message_id' => $message_id,
        ]);
        file_get_contents($botAPI . "/deleteMessage?{$data_del}");
        play($botAPI, $all_chat_id, $group_type, $urlBots, $user_id);

        break;

    case '/ad':

        // Deleting message
        $data_del = http_build_query([
            'chat_id' => $all_chat_id,
            'message_id' => $message_id,
        ]);
        file_get_contents($botAPI . "/deleteMessage?{$data_del}");
        ad($botAPI, $all_chat_id);
        break;

    case '/contact':

        // Deleting message
        $data_del = http_build_query([
            'chat_id' => $all_chat_id,
            'message_id' => $message_id,
        ]);
        file_get_contents($botAPI . "/deleteMessage?{$data_del}");
        contact($botAPI, $all_chat_id);

        break;

    case '/topchats':

        // Deleting message
        $data_del = http_build_query([
            'chat_id' => $all_chat_id,
            'message_id' => $message_id,
        ]);
        file_get_contents($botAPI . "/deleteMessage?{$data_del}");
        topchats($botAPI, $all_chat_id, $dbh);

        break;

    case '/globaltop':

        // Deleting message
        $data_del = http_build_query([
            'chat_id' => $all_chat_id,
            'message_id' => $message_id,
        ]);
        file_get_contents($botAPI . "/deleteMessage?{$data_del}");
        globaltop($botAPI, $all_chat_id, $dbh, $GAME_CUBIC, $GAME_BOWLING, $GAME_DARTS, $GAME_FOOTBALL, $GAME_BASKETBALL, $GAME_CASINO);

        break;

    case '/topgamers':

        // Deleting message
        $data_del = http_build_query([
            'chat_id' => $all_chat_id,
            'message_id' => $message_id,
        ]);
        file_get_contents($botAPI . "/deleteMessage?{$data_del}");
        topgamers($botAPI, $all_chat_id, $dbh, $GAME_CUBIC, $GAME_BOWLING, $GAME_DARTS, $GAME_FOOTBALL, $GAME_BASKETBALL, $GAME_CASINO);

        break;


    case '/mywinschat':

        // Deleting message
        $data_del = http_build_query([
            'chat_id' => $all_chat_id,
            'message_id' => $message_id,
        ]);
        file_get_contents($botAPI . "/deleteMessage?{$data_del}");
        mywinschat($botAPI, $all_chat_id, $dbh, $GAME_CUBIC, $GAME_BOWLING, $GAME_DARTS, $GAME_FOOTBALL, $GAME_BASKETBALL, $GAME_CASINO, $first_name, $user_id);

        break;

    case '/mywinsglobal':

        // Deleting message
        $data_del = http_build_query([
            'chat_id' => $all_chat_id,
            'message_id' => $message_id,
        ]);
        file_get_contents($botAPI . "/deleteMessage?{$data_del}");
        mywinsglobal($botAPI, $all_chat_id, $dbh, $GAME_CUBIC, $GAME_BOWLING, $GAME_DARTS, $GAME_FOOTBALL, $GAME_BASKETBALL, $GAME_CASINO, $first_name, $user_id);

        break;

    case '/top':

        // Deleting message
        $data_del = http_build_query([
            'chat_id' => $all_chat_id,
            'message_id' => $message_id,
        ]);
        file_get_contents($botAPI . "/deleteMessage?{$data_del}");
        top($botAPI, $all_chat_id, $dbh, $GAME_CUBIC, $GAME_BOWLING, $GAME_DARTS, $GAME_FOOTBALL, $GAME_BASKETBALL, $GAME_CASINO);

        break;



    case '/start'.$typeBotAll.'':

        start($botAPI, $user_id, $urlBots);

        break;

    case '/play'.$typeBotAll:

        // Deleting message
        $data_del = http_build_query([
            'chat_id' => $all_chat_id,
            'message_id' => $message_id,
        ]);
        file_get_contents($botAPI . "/deleteMessage?{$data_del}");

        play($botAPI, $all_chat_id, $group_type, $urlBots, $user_id);

        break;

    case '/ad'.$typeBotAll:

        // Deleting message
        $data_del = http_build_query([
            'chat_id' => $all_chat_id,
            'message_id' => $message_id,
        ]);
        file_get_contents($botAPI . "/deleteMessage?{$data_del}");
        ad($botAPI, $all_chat_id);
        break;

    case '/contact'.$typeBotAll:

        // Deleting message
        $data_del = http_build_query([
            'chat_id' => $all_chat_id,
            'message_id' => $message_id,
        ]);
        file_get_contents($botAPI . "/deleteMessage?{$data_del}");
        contact($botAPI, $all_chat_id);

        break;

    case '/topchats'.$typeBotAll:

        // Deleting message
        $data_del = http_build_query([
            'chat_id' => $all_chat_id,
            'message_id' => $message_id,
        ]);
        file_get_contents($botAPI . "/deleteMessage?{$data_del}");
        topchats($botAPI, $all_chat_id, $dbh);

        break;

    case '/globaltop'.$typeBotAll:

        // Deleting message
        $data_del = http_build_query([
            'chat_id' => $all_chat_id,
            'message_id' => $message_id,
        ]);
        file_get_contents($botAPI . "/deleteMessage?{$data_del}");
        globaltop($botAPI, $all_chat_id, $dbh, $GAME_CUBIC, $GAME_BOWLING, $GAME_DARTS, $GAME_FOOTBALL, $GAME_BASKETBALL, $GAME_CASINO);

        break;

    case '/topgamers'.$typeBotAll:

        topgamers($botAPI, $all_chat_id, $dbh, $GAME_CUBIC, $GAME_BOWLING, $GAME_DARTS, $GAME_FOOTBALL, $GAME_BASKETBALL, $GAME_CASINO);

        break;


    case '/mywinschat'.$typeBotAll:

        // Deleting message
        $data_del = http_build_query([
            'chat_id' => $all_chat_id,
            'message_id' => $message_id,
        ]);
        file_get_contents($botAPI . "/deleteMessage?{$data_del}");
        mywinschat($botAPI, $all_chat_id, $dbh, $GAME_CUBIC, $GAME_BOWLING, $GAME_DARTS, $GAME_FOOTBALL, $GAME_BASKETBALL, $GAME_CASINO, $first_name, $user_id);

        break;


    case '/mywinsglobal'.$typeBotAll:

        // Deleting message
        $data_del = http_build_query([
            'chat_id' => $all_chat_id,
            'message_id' => $message_id,
        ]);
        file_get_contents($botAPI . "/deleteMessage?{$data_del}");
        mywinsglobal($botAPI, $all_chat_id, $dbh, $GAME_CUBIC, $GAME_BOWLING, $GAME_DARTS, $GAME_FOOTBALL, $GAME_BASKETBALL, $GAME_CASINO, $first_name, $user_id);

        break;


    case '/top'.$typeBotAll.'':

        // Deleting message
        $data_del = http_build_query([
            'chat_id' => $all_chat_id,
            'message_id' => $message_id,
        ]);
        file_get_contents($botAPI . "/deleteMessage?{$data_del}");
        top($botAPI, $all_chat_id, $dbh, $GAME_CUBIC, $GAME_BOWLING, $GAME_DARTS, $GAME_FOOTBALL, $GAME_BASKETBALL, $GAME_CASINO);

        break;

        //Admin menu

    case '/statistic':

        $checkAdmin = $dbh->query('SELECT * FROM users WHERE role_id = '.$ADMIN.' AND userid = '.$user_id)->fetchAll();
        if(is_array($checkAdmin) && count($checkAdmin) > 0) {
            $getCountUsers = $dbh->query('SELECT COUNT(id) as user_all FROM users')->fetchAll();
            $countUserNumber = 0;
            foreach ($getCountUsers as $item){
                $countUserNumber = $item['user_all'];
            }
            $getCountGroup = $dbh->query('SELECT COUNT(id) as group_all FROM group_users')->fetchAll();
            $countGroupNumber = 0;
            foreach ($getCountGroup as $item){
                $countGroupNumber = $item['group_all'];
            }
            $getCountGroupActive = $dbh->query('SELECT COUNT(id) as group_all FROM group_users WHERE status = 1')->fetchAll();
            $countGroupNumberActive = 0;
            foreach ($getCountGroupActive as $item){
                $countGroupNumberActive = $item['group_all'];
            }
            $getCountGroupNoActive = $dbh->query('SELECT COUNT(id) as group_all FROM group_users WHERE status = 0')->fetchAll();
            $countGroupNumberNoActive = 0;
            foreach ($getCountGroupNoActive as $item){
                $countGroupNumberNoActive = $item['group_all'];
            }
            $message = '';
            $message .= '–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: '.$countUserNumber.''.PHP_EOL;
            $message .= '–í—Å–µ–≥–æ –≥—Ä—É–ø–ø: '.$countGroupNumber.''.PHP_EOL;
            $message .= '–í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –≥—Ä—É–ø–ø: '.$countGroupNumberActive.''.PHP_EOL;
            $message .= '–í—Å–µ–≥–æ –Ω–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –≥—Ä—É–ø–ø: '.$countGroupNumberNoActive.''.PHP_EOL;

            $data = http_build_query([
                'text' => $message,
                'chat_id' => $all_chat_id
            ]);
            file_get_contents($botAPI . "/sendMessage?{$data}");
        } else {
            $data = http_build_query([
                'text' => '–£–ø—Å, –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.',
                'chat_id' => $all_chat_id
            ]);
            file_get_contents($botAPI . "/sendMessage?{$data}");
        }

        break;

    case '/maillist':

        //$dbh->query('INSERT INTO group_users (groupid, title, type, status, date) VALUE ("' . $group_new_id . '", "' . $group_new_title . '", "' . $group_new_type . '", 1, NOW())');

        $checkAdmin = $dbh->query('SELECT * FROM users WHERE role_id = '.$ADMIN.' AND userid = '.$user_id)->fetchAll();
        if(is_array($checkAdmin) && count($checkAdmin) > 0) {
            $checkTime = $dbh->query('SELECT * FROM maillist')->fetchAll();
                if(is_array($checkTime) && count($checkTime) > 0) {
                    foreach ($checkTime as $row){
                        if($row['date_time_tm'] > time()){
                            $data = http_build_query([
                                'text' => "–†–∞—Å—Å—ã–ª–∫—É –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å —Ä–∞–∑ –≤ 24 —á–∞—Å–∞",
                                'chat_id' => $all_chat_id
                            ]);
                            file_get_contents($botAPI . "/sendMessage?{$data}");
                            exit;
                        }
                    }
                } else {
                    $dateTime = time();
                    $dbh->query('INSERT INTO maillist (date_time_tm, date)  VALUE ('.$dateTime .', NOW())');
                }

            $getActiveGroup = $dbh->query('SELECT * FROM group_users WHERE status = 1')->fetchAll();
            foreach ($getActiveGroup as $item){
                $data = http_build_query([
                    'text' => "–ù–∞–∂–º–∏ –Ω–∞ —ç—Ç–æ—Ç emoji, —á—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å!üëá",
                    'chat_id' => $item['groupid']
                ]);
                file_get_contents($botAPI . "/sendMessage?{$data}");

                $data = http_build_query([
                    'emoji' => '‚öΩ',
                    'protect_content' => false,
                    'chat_id' => $item['groupid']
                ]);
                file_get_contents($botAPI . "/sendDice?{$data}");
            }

            $data = http_build_query([
                'text' => '–í—Å–µ–º —á–∞—Ç–∞–º –∏ –≥—Ä—É–ø–ø–∞–º –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è emoji',
                'chat_id' => $all_chat_id
            ]);
            file_get_contents($botAPI . "/sendMessage?{$data}");

            $dateTime = time() + 60 * 60 * 24;
            $dbh->query('UPDATE maillist SET date_time_tm = '.$dateTime.', date = NOW()');
            $dbh->query('INSERT INTO maillistlog (userid, date)  VALUE ("'.$user_id.'", NOW())');
        } else {
            $data = http_build_query([
                'text' => '–£–ø—Å, –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.',
                'chat_id' => $all_chat_id
            ]);
            file_get_contents($botAPI . "/sendMessage?{$data}");
        }

        break;


    default:

        break;
}

function contact($botAPI, $all_chat_id){
    $data = http_build_query([
        'text' => '–ù–∞—à —á–∞—Ç ‚Äî https://t.me/chatdlyaigry
–ê–¥–º–∏–Ω ‚Äî @managerbotstg',
        'chat_id' => $all_chat_id
    ]);
    file_get_contents($botAPI . "/sendMessage?{$data}");
}

function ad($botAPI, $all_chat_id){
    $data = http_build_query([
        'text' => '–ß—Ç–æ–±—ã –∫—É–ø–∏—Ç—å —Ä–µ–∫–ª–∞–º—É –≤ —á–∞—Ç–∞—Ö, –≥–¥–µ –µ—Å—Ç—å –Ω–∞—à –±–æ—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É:
@managerbotstg',
        'chat_id' => $all_chat_id
    ]);
    file_get_contents($botAPI . "/sendMessage?{$data}");
}

function topchats($botAPI, $all_chat_id, $dbh){
    $monday = new \DateTime('Monday this week');
    $mondayFormat =  $monday->format('Y-m-d');
    $currentDate = date('Y-m-d');
    $mondayFormat = $mondayFormat.' 00:00:00';
    $currentDate = $currentDate.' 23:59:00';

    $query = $dbh->query('SELECT COUNT(chat.id) as top, chat.groupid as chat_group, group_users.title FROM chat_users_group as chat INNER JOIN group_users ON chat.groupid = group_users.groupid WHERE chat.date BETWEEN "'.$mondayFormat.'" AND "'.$currentDate.'" GROUP BY chat.groupid, group_users.title ORDER BY top DESC LIMIT 10')->fetchAll();
    $top = '–¢–æ–ø 10 —á–∞—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é:'.PHP_EOL;
    $top .= PHP_EOL;
    if(is_array($query) && count($query) > 0) {
        foreach ($query as $key => $row) {
            $key++;
            $top .= $key.'. '.$row['title'].', –ø–æ–±–µ–¥: '.$row['top'].PHP_EOL;
        }
    }
    $data = http_build_query([
        'text' => $top,
        'chat_id' => $all_chat_id
    ]);
    file_get_contents($botAPI . "/sendMessage?{$data}");
}

function globaltop($botAPI, $all_chat_id, $dbh, $GAME_CUBIC, $GAME_BOWLING, $GAME_DARTS, $GAME_FOOTBALL, $GAME_BASKETBALL, $GAME_CASINO){
    $bestAll = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    $top = '';
    $top .= '–¢–æ–ø –ª—É—á—à–∏—Ö –∏–≥—Ä–æ–∫–æ–≤:'.PHP_EOL;
    $top .= PHP_EOL;
    if(is_array($bestAll) && count($bestAll) > 0) {
        foreach ($bestAll as $row) {
            $top .= 'üèÜ '.$row["first_name"].' - —á–µ–º–ø–∏–æ–Ω –±–æ—Ç–∞: '.$row["best"].' –ø–æ–±–µ–¥'.PHP_EOL;
        }
    }

    $bestCubic = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE type_game_id = '.$GAME_CUBIC.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestCubic) && count($bestCubic) > 0) {
        foreach ($bestCubic as $row) {
            $top .= 'üé≤ '.$row["first_name"].' - –ª–∏–¥–µ—Ä –ø–æ –ø–æ–±–µ–¥–∞–º –≤ –∫—É–±–∏–∫: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestBowling = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE type_game_id = '.$GAME_BOWLING.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestBowling) && count($bestBowling) > 0) {
        foreach ($bestBowling as $row) {
            $top .= 'üé≥ '.$row["first_name"].' - –ª–∏–¥–µ—Ä –ø–æ –≤—ã–±–∏—Ç—ã–º —Å—Ç—Ä–∞–π–∫–∞–º: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestDarts = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE type_game_id = '.$GAME_DARTS.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestDarts) && count($bestDarts) > 0) {
        foreach ($bestDarts as $row) {
            $top .= 'üéØ '.$row["first_name"].' - –ª–∏–¥–µ—Ä –ø–æ–ø–∞–¥–∞–Ω–∏–π –≤ –º–∏—à–µ–Ω—å: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestFootball = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE type_game_id = '.$GAME_FOOTBALL.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestFootball) && count($bestFootball) > 0) {
        foreach ($bestFootball as $row) {
            $top .= '‚öΩÔ∏è'.$row["first_name"].' - –ª–∏–¥–µ—Ä –ø–æ –∑–∞–±–∏—Ç—ã–º –≥–æ–ª–∞–º: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestBasketball = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE type_game_id = '.$GAME_BASKETBALL.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestBasketball) && count($bestBasketball) > 0) {
        foreach ($bestBasketball as $row) {
            $top .= 'üèÄ '.$row["first_name"].' - –ª–∏–¥–µ—Ä –ø–æ –ø–æ–ø–∞–¥–∞–Ω–∏—è–º –≤ –∫–æ—Ä–∑–∏–Ω—É: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestCasino = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE type_game_id = '.$GAME_CASINO.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestCasino) && count($bestCasino) > 0) {
        foreach ($bestCasino as $row) {
            $top .= 'üé∞ '.$row["first_name"].' - –ª–∏–¥–µ—Ä –ø–æ –¥–∂–µ–∫–ø–æ—Ç–∞–º: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }

    $data = http_build_query([
        'text' => $top,
        'chat_id' => $all_chat_id
    ]);
    file_get_contents($botAPI . "/sendMessage?{$data}");
}

function topgamers($botAPI, $all_chat_id, $dbh, $GAME_CUBIC, $GAME_BOWLING, $GAME_DARTS, $GAME_FOOTBALL, $GAME_BASKETBALL, $GAME_CASINO){
    $bestAll = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    $top = '';
    $top .= '–¢–æ–ø –ª—É—á—à–∏—Ö –∏–≥—Ä–æ–∫–æ–≤:'.PHP_EOL;
    $top .= PHP_EOL;
    if(is_array($bestAll) && count($bestAll) > 0) {
        foreach ($bestAll as $row) {
            $top .= 'üèÜ '.$row["first_name"].' - —á–µ–º–ø–∏–æ–Ω –±–æ—Ç–∞: '.$row["best"].' –ø–æ–±–µ–¥'.PHP_EOL;
        }
    }

    $bestCubic = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE type_game_id = '.$GAME_CUBIC.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestCubic) && count($bestCubic) > 0) {
        foreach ($bestCubic as $row) {
            $top .= 'üé≤ '.$row["first_name"].' -  –ª–∏–¥–µ—Ä –ø–æ –ø–æ–±–µ–¥–∞–º –≤ –∫—É–±–∏–∫: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestBowling = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE type_game_id = '.$GAME_BOWLING.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestBowling) && count($bestBowling) > 0) {
        foreach ($bestBowling as $row) {
            $top .= 'üé≥ '.$row["first_name"].' -  –ª–∏–¥–µ—Ä –ø–æ –≤—ã–±–∏—Ç—ã–º —Å—Ç—Ä–∞–π–∫–∞–º: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestDarts = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE type_game_id = '.$GAME_DARTS.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestDarts) && count($bestDarts) > 0) {
        foreach ($bestDarts as $row) {
            $top .= 'üéØ '.$row["first_name"].' -  –ª–∏–¥–µ—Ä –ø–æ–ø–∞–¥–∞–Ω–∏–π –≤ –º–∏—à–µ–Ω—å: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestFootball = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE type_game_id = '.$GAME_FOOTBALL.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestFootball) && count($bestFootball) > 0) {
        foreach ($bestFootball as $row) {
            $top .= '‚öΩÔ∏è'.$row["first_name"].' -  –ª–∏–¥–µ—Ä –ø–æ –∑–∞–±–∏—Ç—ã–º –≥–æ–ª–∞–º: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestBasketball = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE type_game_id = '.$GAME_BASKETBALL.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestBasketball) && count($bestBasketball) > 0) {
        foreach ($bestBasketball as $row) {
            $top .= 'üèÄ '.$row["first_name"].' -  –ª–∏–¥–µ—Ä –ø–æ –ø–æ–ø–∞–¥–∞–Ω–∏—è–º –≤ –∫–æ—Ä–∑–∏–Ω—É: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestCasino = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE type_game_id = '.$GAME_CASINO.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestCasino) && count($bestCasino) > 0) {
        foreach ($bestCasino as $row) {
            $top .= 'üé∞ '.$row["first_name"].' -   –ª–∏–¥–µ—Ä –ø–æ –¥–∂–µ–∫–ø–æ—Ç–∞–º: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }

    $data = http_build_query([
        'text' => $top,
        'chat_id' => $all_chat_id
    ]);
    file_get_contents($botAPI . "/sendMessage?{$data}");
}

function mywinschat($botAPI, $all_chat_id, $dbh, $GAME_CUBIC, $GAME_BOWLING, $GAME_DARTS, $GAME_FOOTBALL, $GAME_BASKETBALL, $GAME_CASINO, $first_name, $user_id){
    $bestAll = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE groupid = "'.$all_chat_id.'" AND chat.userid = \''.$user_id.'\'  AND type_game_id != 0 GROUP BY chat.userid, users.first_name ORDER BY best')->fetchAll();
    $top = '';
    $top .= $first_name. ', —Ç–≤–æ–∏ –ø–æ–±–µ–¥—ã:'.PHP_EOL;
    $top .= PHP_EOL;
    if(is_array($bestAll) && count($bestAll) > 0) {
        foreach ($bestAll as $row) {
            $top .= 'üèÜ –û–±—â–∏–µ: '.$row["best"].' –ø–æ–±–µ–¥'.PHP_EOL;
        }
    }

    $bestCubic = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE groupid = "'.$all_chat_id.'" AND chat.userid = \''.$user_id.'\' AND type_game_id = '.$GAME_CUBIC.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestCubic) && count($bestCubic) > 0) {
        foreach ($bestCubic as $row) {
            $top .= 'üé≤ –ü–æ–±–µ–¥—ã –≤ –∫—É–±–∏–∫: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestBowling = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE groupid = "'.$all_chat_id.'" AND chat.userid = \''.$user_id.'\' AND type_game_id = '.$GAME_BOWLING.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestBowling) && count($bestBowling) > 0) {
        foreach ($bestBowling as $row) {
            $top .= 'üé≥ –í—ã–±–∏—Ç–æ —Å—Ç—Ä–∞–π–∫–æ–≤: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestDarts = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE groupid = "'.$all_chat_id.'" AND chat.userid = \''.$user_id.'\' AND type_game_id = '.$GAME_DARTS.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestDarts) && count($bestDarts) > 0) {
        foreach ($bestDarts as $row) {
            $top .= 'üéØ –ü–æ–ø–∞–¥–∞–Ω–∏–π –≤ –º–∏—à–µ–Ω—å: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestFootball = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE groupid = "'.$all_chat_id.'" AND chat.userid = \''.$user_id.'\' AND type_game_id = '.$GAME_FOOTBALL.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestFootball) && count($bestFootball) > 0) {
        foreach ($bestFootball as $row) {
            $top .= '‚öΩÔ∏è –ó–∞–±–∏—Ç–æ –≥–æ–ª–æ–≤: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestBasketball = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE groupid = "'.$all_chat_id.'" AND chat.userid = \''.$user_id.'\' AND type_game_id = '.$GAME_BASKETBALL.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestBasketball) && count($bestBasketball) > 0) {
        foreach ($bestBasketball as $row) {
            $top .= 'üèÄ –ü–æ–ø–∞–¥–∞–Ω–∏–π –≤ –∫–æ—Ä–∑–∏–Ω—É: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestCasino = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE groupid = "'.$all_chat_id.'" AND chat.userid = \''.$user_id.'\' AND type_game_id = '.$GAME_CASINO.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestCasino) && count($bestCasino) > 0) {
        foreach ($bestCasino as $row) {
            $top .= 'üé∞ –î–∂–µ–∫–ø–æ—Ç—ã: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }

    $data = http_build_query([
        'text' => $top,
        'chat_id' => $all_chat_id
    ]);
    file_get_contents($botAPI . "/sendMessage?{$data}");
}

function mywinsglobal($botAPI, $all_chat_id, $dbh, $GAME_CUBIC, $GAME_BOWLING, $GAME_DARTS, $GAME_FOOTBALL, $GAME_BASKETBALL, $GAME_CASINO, $first_name, $user_id){
    $bestAll = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE chat.userid = \''.$user_id.'\'  AND type_game_id != 0 GROUP BY chat.userid, users.first_name ORDER BY best')->fetchAll();
    $top = '';
    $top .= $first_name. ', —Ç–≤–æ–∏ –ø–æ–±–µ–¥—ã:'.PHP_EOL;
    $top .= PHP_EOL;
    if(is_array($bestAll) && count($bestAll) > 0) {
        foreach ($bestAll as $row) {
            $top .= 'üèÜ –û–±—â–∏–µ: '.$row["best"].' –ø–æ–±–µ–¥'.PHP_EOL;
        }
    }

    $bestCubic = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE chat.userid = \''.$user_id.'\' AND type_game_id = '.$GAME_CUBIC.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestCubic) && count($bestCubic) > 0) {
        foreach ($bestCubic as $row) {
            $top .= 'üé≤ –ü–æ–±–µ–¥—ã –≤ –∫—É–±–∏–∫: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestBowling = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE chat.userid = \''.$user_id.'\' AND type_game_id = '.$GAME_BOWLING.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestBowling) && count($bestBowling) > 0) {
        foreach ($bestBowling as $row) {
            $top .= 'üé≥ –í—ã–±–∏—Ç–æ —Å—Ç—Ä–∞–π–∫–æ–≤: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestDarts = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE chat.userid = \''.$user_id.'\' AND type_game_id = '.$GAME_DARTS.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestDarts) && count($bestDarts) > 0) {
        foreach ($bestDarts as $row) {
            $top .= 'üéØ –ü–æ–ø–∞–¥–∞–Ω–∏–π –≤ –º–∏—à–µ–Ω—å: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestFootball = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE chat.userid = \''.$user_id.'\' AND type_game_id = '.$GAME_FOOTBALL.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestFootball) && count($bestFootball) > 0) {
        foreach ($bestFootball as $row) {
            $top .= '‚öΩÔ∏è –ó–∞–±–∏—Ç–æ –≥–æ–ª–æ–≤: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestBasketball = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE chat.userid = \''.$user_id.'\' AND type_game_id = '.$GAME_BASKETBALL.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestBasketball) && count($bestBasketball) > 0) {
        foreach ($bestBasketball as $row) {
            $top .= 'üèÄ –ü–æ–ø–∞–¥–∞–Ω–∏–π –≤ –∫–æ—Ä–∑–∏–Ω—É: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestCasino = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE chat.userid = \''.$user_id.'\' AND type_game_id = '.$GAME_CASINO.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestCasino) && count($bestCasino) > 0) {
        foreach ($bestCasino as $row) {
            $top .= 'üé∞ –î–∂–µ–∫–ø–æ—Ç—ã: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }

    $data = http_build_query([
        'text' => $top,
        'chat_id' => $all_chat_id
    ]);
    file_get_contents($botAPI . "/sendMessage?{$data}");
}

function play($botAPI, $all_chat_id, $group_type, $urlBots, $user_id){
    if($group_type == "private"){
        $data = http_build_query([
            'text' => "–Ø —Ä–∞–±–æ—Ç–∞—é —Ç–æ–ª—å–∫–æ –≤ —á–∞—Ç–∞—Ö. –î–æ–±–∞–≤—å –º–µ–Ω—è –∏ —è —É—Å—Ç—Ä–æ—é –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â—É—é –∏–≥—Ä—É —Å—Ä–µ–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤! üöÄ",
            'chat_id' => $all_chat_id
        ]);
        $inline_button1 = array("text"=>"–î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É ","url"=>$urlBots);
        $inline_keyboard = [[$inline_button1]];
        $keyboard=array("inline_keyboard"=>$inline_keyboard);
        $replyMarkup = json_encode($keyboard);
        file_get_contents($botAPI . "/sendMessage?{$data}&reply_markup=".$replyMarkup);
    }
    if($group_type == "group" || $group_type == "supergroup"){
        $data = http_build_query([
            'chat_id' => $all_chat_id,
            'video' => 'https://game.cryptopushbot.ru/1.mp4',
            'caption' => '–ü—Ä–∏–≤–µ—Ç\\, —è –∏–≥—Ä–æ–≤–æ–π –±–æ—Ç –¥–ª—è —á–∞—Ç–æ–≤\\! üëã

–í –∏–≥—Ä–µ –µ—Å—Ç—å 6 –æ—Å–Ω–æ–≤–Ω—ã—Ö emoji\\: 

üéØ \\- –ü–æ–ø–∞–¥–∞–π –≤ –º–∏—à–µ–Ω—å
üé≥ \\- –í—ã–±–∏–≤–∞–π —Å—Ç—Ä–∞–π–∫–∏
‚öΩÔ∏è \\- –ó–∞–±–∏–≤–∞–π –≥–æ–ª—ã
üé∞ \\- –í—ã–±–∏–≤–∞–π –î–∂–µ–∫–ü–æ—Ç—ã
üèÄ \\- –ü–æ–ø–∞–¥–∞–π –≤ –∫–æ—Ä–∑–∏–Ω—É
üé≤ \\- –í—ã–±–∏–≤–∞–π max —á–∏—Å–ª–æ –≤ –∫—É–±–∏–∫

Telegram –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç —á–µ—Å—Ç–Ω—É—é –∏–≥—Ä—É –∑–∞ —Å—á—ë—Ç —Ä–∞–Ω–¥–æ–º–∞, –∞ [¬´–ò–≥—Ä–æ–≤–æ–π –±–æ—Ç¬ª](https://t.me/stickersgame_bot) –±—É–¥–µ—Ç —É—á–∏—Ç—ã–≤–∞—Ç—å –ø–æ–±–µ–¥—ã –∏ —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å —Ç–æ–ø —Å—Ä–µ–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ —á–∞—Ç–æ–≤\\.

–°–¢–ê–ù–¨ –¢–û–ü 1 –ò–ì–†–û–ö–û–ú –ò–õ–ò –ü–û–ë–ï–ñ–î–ê–ô –ö–û–ú–ê–ù–î–û–ô\\!ü•á'
        ]);

        $inline_button1 = array("text"=>"‚öΩ","callback_data" => 'football_'.$user_id);
        $inline_button2 = array("text"=>"üé≥","callback_data" => 'bowling_'.$user_id);
        $inline_button3 = array("text"=>"üéØ","callback_data" => 'darts_'.$user_id);
        $inline_button4 = array("text"=>"üèÄ","callback_data" => 'basketball_'.$user_id);
        $inline_button5 = array("text"=>"üé≤","callback_data" => 'cubic_'.$user_id);
        $inline_button6 = array("text"=>"üé∞","callback_data" => 'casino_'.$user_id);
        $inline_keyboard = [[$inline_button1, $inline_button2, $inline_button3, $inline_button4, $inline_button5, $inline_button6]];
        $keyboard=array('inline_keyboard'=>$inline_keyboard);
        $replyMarkup = json_encode($keyboard);
        file_get_contents($botAPI . "/sendVideo?{$data}&reply_markup=".$replyMarkup."&parse_mode=MarkdownV2");
    }
}

function top($botAPI, $all_chat_id, $dbh, $GAME_CUBIC, $GAME_BOWLING, $GAME_DARTS, $GAME_FOOTBALL, $GAME_BASKETBALL, $GAME_CASINO){
    $bestAll = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE groupid = "'.$all_chat_id.'" AND type_game_id != 0  GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    $top = '';
    $top .= '–¢–æ–ø —á–∞—Ç–∞:'.PHP_EOL;
    $top .= PHP_EOL;
    if(is_array($bestAll) && count($bestAll) > 0) {
        foreach ($bestAll as $row) {
            $top .= 'üèÜ '.$row["first_name"].' - —á–µ–º–ø–∏–æ–Ω —á–∞—Ç–∞: '.$row["best"].' –ø–æ–±–µ–¥'.PHP_EOL;
        }
    }

    $bestCubic = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE groupid = "'.$all_chat_id.'" AND type_game_id = '.$GAME_CUBIC.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestCubic) && count($bestCubic) > 0) {
        foreach ($bestCubic as $row) {
            $top .= 'üé≤ '.$row["first_name"].' -  –ª–∏–¥–µ—Ä –ø–æ –ø–æ–±–µ–¥–∞–º –≤ –∫—É–±–∏–∫: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestBowling = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE groupid = "'.$all_chat_id.'" AND type_game_id = '.$GAME_BOWLING.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestBowling) && count($bestBowling) > 0) {
        foreach ($bestBowling as $row) {
            $top .= 'üé≥ '.$row["first_name"].' -  –ª–∏–¥–µ—Ä –ø–æ –≤—ã–±–∏—Ç—ã–º —Å—Ç—Ä–∞–π–∫–∞–º: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestDarts = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE groupid = "'.$all_chat_id.'" AND type_game_id = '.$GAME_DARTS.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestDarts) && count($bestDarts) > 0) {
        foreach ($bestDarts as $row) {
            $top .= 'üéØ '.$row["first_name"].' -  –ª–∏–¥–µ—Ä –ø–æ–ø–∞–¥–∞–Ω–∏–π –≤ –º–∏—à–µ–Ω—å: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestFootball = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE groupid = "'.$all_chat_id.'" AND type_game_id = '.$GAME_FOOTBALL.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestFootball) && count($bestFootball) > 0) {
        foreach ($bestFootball as $row) {
            $top .= '‚öΩÔ∏è'.$row["first_name"].' -  –ª–∏–¥–µ—Ä –ø–æ –∑–∞–±–∏—Ç—ã–º –≥–æ–ª–∞–º: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestBasketball = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE groupid = "'.$all_chat_id.'" AND type_game_id = '.$GAME_BASKETBALL.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestBasketball) && count($bestBasketball) > 0) {
        foreach ($bestBasketball as $row) {
            $top .= 'üèÄ '.$row["first_name"].' -  –ª–∏–¥–µ—Ä –ø–æ –ø–æ–ø–∞–¥–∞–Ω–∏—è–º –≤ –∫–æ—Ä–∑–∏–Ω—É: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }
    $bestCasino = $dbh->query('SELECT chat.userid, COUNT(chat.userid) as best, users.first_name FROM chat_users_group as chat INNER JOIN users ON chat.userid = users.userid WHERE groupid = "'.$all_chat_id.'" AND type_game_id = '.$GAME_CASINO.' GROUP BY chat.userid, users.first_name ORDER BY best DESC LIMIT 1')->fetchAll();
    if(is_array($bestCasino) && count($bestCasino) > 0) {
        foreach ($bestCasino as $row) {
            $top .= 'üé∞ '.$row["first_name"].' -   –ª–∏–¥–µ—Ä –ø–æ –¥–∂–µ–∫–ø–æ—Ç–∞–º: '.$row["best"].' —Ä–∞–∑'.PHP_EOL;
        }
    }

    $data = http_build_query([
        'text' => $top,
        'chat_id' => $all_chat_id
    ]);
    file_get_contents($botAPI . "/sendMessage?{$data}");
}

function start($botAPI, $user_id, $urlBots){
    $data = http_build_query([
        'text' => "–ü—Ä–∏–≤–µ—Ç! üëã
–Ø –∏–≥—Ä–æ–≤–æ–π –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —á–∞—Ç–∞—Ö. –î–æ–±–∞–≤—å –º–µ–Ω—è –≤ —á–∞—Ç –∏ —è —É—Å—Ç—Ä–æ—é –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â—É—é –∏–≥—Ä—É —Å—Ä–µ–¥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤! üöÄ

/play - –∏–≥—Ä–∞—Ç—å 
/topchats - —Ç–æ–ø 10 –ª—É—á—à–∏—Ö —á–∞—Ç–æ–≤ –Ω–µ–¥–µ–ª–∏
/globaltop - –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤
/ad - —Ä–µ–∫–ª–∞–º–∞ –≤ –±–æ—Ç–µ
/contact - –∫–æ–Ω—Ç–∞–∫—Ç—ã
",
        'chat_id' => $user_id
    ]);
    $inline_button1 = array("text"=>"–î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É ","url"=> $urlBots);
    $inline_keyboard = [[$inline_button1]];
    $keyboard=array("inline_keyboard"=>$inline_keyboard);
    $replyMarkup = json_encode($keyboard);
    file_get_contents($botAPI . "/sendMessage?{$data}&reply_markup=".$replyMarkup);
}

if (isset($update['callback_query'])) {
    $groupCallBackId = $update['callback_query']['message']['chat']['id'];
    $pars = explode('_', $update['callback_query']['data']);
    if(isset($pars[0]) && isset($pars[1])) {
        $data = http_build_query([
            'text' => "–ù–∞–∂–º–∏ –Ω–∞ —ç—Ç–æ—Ç emoji, —á—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å!üëá",
            'chat_id' => $groupCallBackId
        ]);
        file_get_contents($botAPI . "/sendMessage?{$data}");
        if ($pars[0] == 'bowling') {
            $data = http_build_query([
                'emoji' => 'üé≥',
                'protect_content' => false,
                'chat_id' => $groupCallBackId
            ]);
            file_get_contents($botAPI . "/sendDice?{$data}");
        }
        if ($pars[0] == 'football') {
            $data = http_build_query([
                'emoji' => '‚öΩ',
                'protect_content' => false,
                'chat_id' => $groupCallBackId
            ]);
            file_get_contents($botAPI . "/sendDice?{$data}");
        }
        if ($pars[0] == 'darts') {
            $data = http_build_query([
                'emoji' => 'üéØ',
                'protect_content' => false,
                'chat_id' => $groupCallBackId
            ]);
            file_get_contents($botAPI . "/sendDice?{$data}");
        }
        if ($pars[0] == 'basketball') {
            $data = http_build_query([
                'emoji' => 'üèÄ',
                'protect_content' => false,
                'chat_id' => $groupCallBackId
            ]);
            file_get_contents($botAPI . "/sendDice?{$data}");
        }
        if ($pars[0] == 'cubic') {
            $data = http_build_query([
                'emoji' => 'üé≤',
                'protect_content' => false,
                'chat_id' => $groupCallBackId
            ]);
            file_get_contents($botAPI . "/sendDice?{$data}");
        }
        if ($pars[0] == 'casino') {
            $data = http_build_query([
                'emoji' => 'üé∞',
                'protect_content' => false,
                'chat_id' => $groupCallBackId
            ]);
            file_get_contents($botAPI . "/sendDice?{$data}");
        }
    }
}


function sendSms($botAPI, $replyMarkup, $group_id, $method, $data)
{

    $curl = curl_init();
    curl_setopt($curl, CURLOPT_URL, $botAPI."/".$method."?".$data."&reply_markup='.$replyMarkup.'&parse_mode=MarkdownV2");
    curl_setopt($curl, CURLOPT_RETURNTRANSFER,true);
    $out = curl_exec($curl);
    curl_close($curl);
}